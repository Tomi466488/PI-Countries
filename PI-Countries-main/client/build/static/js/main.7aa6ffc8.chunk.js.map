{"version":3,"sources":["components/LandingPage/LandingPage.jsx","actions/index.js","components/Card/Card.jsx","components/Home/Home.jsx","App.js","reportWebVitals.js","reducer/index.js","store/index.js","index.js"],"names":["LandingPage","_jsxs","children","_jsx","Link","to","getCountries","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","dispatch","json","wrap","_context","prev","next","axios","get","sent","abrupt","type","payload","data","stop","_x","apply","arguments","Card","name","image","info","src","alt","width","height","Home","useDispatch","allCountries","useSelector","state","countries","useEffect","onClick","e","preventDefault","HandlerClick","value","map","id","App","BrowserRouter","className","Switch","Route","exact","path","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","rootReducer","length","undefined","action","_objectSpread","store","createStore","composeWithDevTools","applyMiddleware","thunk","ReactDOM","render","Provider","React","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7aa6ffc8.chunk.js","sourcesContent":["import React from 'react';\r\nimport {Link} from 'react-router-dom';\r\n\r\nexport default function LandingPage (){\r\n    return(\r\n        <div>\r\n            <h1>Bienvenidos</h1>\r\n            <Link to='/home'>\r\n                <button>Ingresar</button>\r\n            </Link>\r\n        </div>\r\n    )\r\n}","import axios from 'axios';\r\n\r\nexport function getCountries(){\r\n    return async function(dispatch){\r\n        var json = await axios.get(\"http://localhost:3001/countries\",{\r\n            \r\n        });\r\n        return dispatch({\r\n            type: 'GET_COUNTRIES',\r\n            payload: json.data\r\n        })\r\n    }\r\n}","import React from 'react';\r\n\r\nexport default function Card({name, image, info}){\r\n    return (\r\n        <div>\r\n            <h3>{name}</h3>\r\n            <h5>{info}</h5>\r\n            <img src={image} alt=\"img not found\" width=\"200px\" height=\"250px\"/>\r\n        </div>\r\n    );\r\n}","import React from 'react';\r\nimport { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { getCountries } from '../../actions';\r\nimport {Link} from 'react-router-dom';\r\nimport Card from '../Card/Card';\r\n\r\nexport default function Home(){\r\n    const dispatch = useDispatch();\r\n    const allCountries = useSelector((state) => state.countries)\r\n\r\n    useEffect(() =>{\r\n        dispatch(getCountries());\r\n    },[dispatch])\r\n\r\n    function HandlerClick(e){\r\n        e.preventDefault();\r\n        dispatch(getCountries());\r\n\r\n    }\r\n\r\n    return(\r\n        <div>\r\n            <Link to='activity'>Crear actividad</Link>\r\n            <h1>Actividad</h1>\r\n            <button onClick={e=> {HandlerClick(e)}}>Volver a cargar todos los paises</button>\r\n            <div>\r\n                <select>\r\n                    <option value='asc'>Ascendente</option>\r\n                    <option value='desc'>Descendente</option>\r\n                </select>\r\n                <select>\r\n                    <option value='todos'>Todos</option>\r\n                    <option value='norte america'>Norte América</option>\r\n                    <option value='sur america'>Sur América</option>\r\n                    <option value='eruopa'>Europa</option>\r\n                    <option value='africa'>Africa</option>\r\n                    <option value='antartica'>Antártida</option>\r\n                    <option value='oceania'>Oceanía</option>\r\n                </select>    \r\n                 {allCountries?.map((e)=> {\r\n                    return(\r\n                        <div>\r\n                            <Link to={\"/home\" + e.id}>\r\n                                <Card name={e.name} image={e.image} info={e.info} key={e.id}/>\r\n                            </Link>\r\n                        </div>\r\n                    )\r\n                 })\r\n\r\n                 }      \r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import './App.css';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\nimport LandingPage from './components/LandingPage/LandingPage';\nimport Home from './components/Home/Home';\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <div className=\"App\">\n        <Switch>\n            <Route exact path=\"/\" component={LandingPage}/>\n            <Route path=\"/home\" component={Home}/>\n        </Switch>\n      </div>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","const initialState = {\r\n    countries : []\r\n}\r\n\r\nfunction rootReducer (state = initialState, action){\r\n    switch(action.type){\r\n        case 'GET_COUNTRIES':\r\n            return  {\r\n                ...state,\r\n                countries: action.payload\r\n            }    \r\n            default:\r\n                return state;   \r\n    }\r\n\r\n}\r\n\r\nexport default rootReducer;","import { createStore, applyMiddleware } from 'redux';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport thunk from 'redux-thunk';\r\nimport rootReducer from '../reducer';\r\n\r\nexport const store = createStore(rootReducer, composeWithDevTools(applyMiddleware(thunk)));","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { Provider } from 'react-redux';\nimport { store } from './store';\n\nReactDOM.render(\n  <Provider store={store}>\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}